#!/usr/bin/env python3
"""
Simple test for Retriever Builder
"""
import asyncio
from processors.retriever_builder import MatchContextRetriever

async def test_retriever_content():
    """Test what content is available in Pinecone"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ Retriever...")
    
    retriever = MatchContextRetriever()
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Pinecone
    print("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ Pinecone:")
    stats = retriever.pinecone_index.describe_index_stats()
    print(f"   –í—Å–µ–≥–æ –≤–µ–∫—Ç–æ—Ä–æ–≤: {stats.total_vector_count}")
    
    # –ü—Ä–æ—Å—Ç–æ–π –ø–æ–∏—Å–∫ –≤–µ–∫—Ç–æ—Ä–æ–≤
    print("\nüîç –ü–æ–∏—Å–∫ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:")
    dummy_vector = [0.0] * 1536
    results = retriever.pinecone_index.query(
        vector=dummy_vector, 
        top_k=10, 
        include_metadata=True
    )
    
    print(f"   –ù–∞–π–¥–µ–Ω–æ {len(results.matches)} –≤–µ–∫—Ç–æ—Ä–æ–≤")
    
    # –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã
    for i, match in enumerate(results.matches[:5]):
        meta = match.metadata
        print(f"\n{i+1}. –ö–æ–Ω—Ç–µ–Ω—Ç:")
        print(f"   –ò—Å—Ç–æ—á–Ω–∏–∫: {meta.get('source', 'unknown')}")
        print(f"   –¢–∏–ø: {meta.get('chunk_type', 'unknown')}")
        print(f"   –ö–æ–º–∞–Ω–¥—ã: {meta.get('linked_team_ids', '[]')}")
        print(f"   –ò–≥—Ä–æ–∫–∏: {meta.get('linked_player_ids', '[]')}")
        print(f"   –í–∞–∂–Ω–æ—Å—Ç—å: {meta.get('importance_score', 'unknown')}/5")
        print(f"   –î–∞—Ç–∞: {meta.get('document_timestamp', 'unknown')}")
        text = meta.get('chunk_text', '')[:100]
        print(f"   –¢–µ–∫—Å—Ç: {text}...")
    
    return True

if __name__ == "__main__":
    asyncio.run(test_retriever_content()) 