create table public.ai_predictions (
  id uuid not null default gen_random_uuid (),
  fixture_id bigint not null,
  type text null,
  chain_of_thought text null,
  final_prediction text null,
  value_bets_json jsonb null,
  generated_at timestamp without time zone null default now(),
  model_version text null,
  constraint ai_predictions_pkey primary key (id),
  constraint ai_predictions_fixture_id_fkey foreign KEY (fixture_id) references fixtures (fixture_id)
) TABLESPACE pg_default;

create table public.chunk_linked_coaches (
  chunk_id uuid not null,
  coach_id integer not null,
  constraint chunk_linked_coaches_pkey primary key (chunk_id, coach_id),
  constraint chunk_linked_coaches_chunk_id_fkey foreign KEY (chunk_id) references document_chunks (id) on delete CASCADE,
  constraint chunk_linked_coaches_coach_id_fkey foreign KEY (coach_id) references coaches (coach_id) on delete CASCADE
) TABLESPACE pg_default;

create table public.chunk_linked_players (
  chunk_id uuid not null,
  player_id integer not null,
  constraint chunk_linked_players_pkey primary key (chunk_id, player_id),
  constraint chunk_linked_players_chunk_id_fkey foreign KEY (chunk_id) references document_chunks (id) on delete CASCADE,
  constraint chunk_linked_players_player_id_fkey foreign KEY (player_id) references players (player_id) on delete CASCADE
) TABLESPACE pg_default;

create table public.chunk_linked_teams (
  chunk_id uuid not null,
  team_id integer not null,
  constraint chunk_linked_teams_pkey primary key (chunk_id, team_id),
  constraint chunk_linked_teams_chunk_id_fkey foreign KEY (chunk_id) references document_chunks (id) on delete CASCADE,
  constraint chunk_linked_teams_team_id_fkey foreign KEY (team_id) references teams (team_id) on delete CASCADE
) TABLESPACE pg_default;

create table public.coaches (
  coach_id integer not null,
  name text null,
  firstname text null,
  lastname text null,
  photo_url text null,
  nationality text null,
  birth_date date null,
  current_team_id integer null,
  api_response_coach jsonb null,
  last_updated_api_football timestamp with time zone null default now(),
  created_at timestamp with time zone null default now(),
  constraint coaches_pkey primary key (coach_id),
  constraint coaches_current_team_id_fkey foreign KEY (current_team_id) references teams (team_id) on delete set null
) TABLESPACE pg_default;

create index IF not exists idx_coaches_current_team_id on public.coaches using btree (current_team_id) TABLESPACE pg_default;

create index IF not exists idx_coaches_name on public.coaches using gin (to_tsvector('simple'::regconfig, name)) TABLESPACE pg_default;

create table public.document_chunks (
  id uuid not null default gen_random_uuid (),
  processed_document_id uuid not null,
  chunk_index integer not null,
  chunk_text text not null,
  summary text null,
  chunk_type text null,
  tone text null,
  importance_score integer null,
  source_reference text null,
  quoted_person text null,
  event_date_mentioned date null,
  pinecone_vector_id text null,
  created_at timestamp with time zone null default now(),
  constraint document_chunks_pkey primary key (id),
  constraint document_chunks_processed_document_id_fkey foreign KEY (processed_document_id) references processed_documents (id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists idx_document_chunks_processed_document_id on public.document_chunks using btree (processed_document_id) TABLESPACE pg_default;

create index IF not exists idx_document_chunks_chunk_type on public.document_chunks using btree (chunk_type) TABLESPACE pg_default;

create index IF not exists idx_document_chunks_importance_score on public.document_chunks using btree (importance_score) TABLESPACE pg_default;

create table public.emb_cache (
  hash text not null,
  vector double precision[] null,
  created_at timestamp with time zone null default now(),
  constraint emb_cache_pkey primary key (hash)
) TABLESPACE pg_default;

create table public.fixtures (
  fixture_id integer generated by default as identity not null,
  league_id integer null,
  home_team_id integer null,
  away_team_id integer null,
  event_date timestamp with time zone null default (now() AT TIME ZONE 'utc'::text),
  status_short character varying(50) null,
  score_home integer null,
  score_away integer null,
  created_at timestamp with time zone not null default now(),
  updated_at timestamp with time zone null,
  status_long character varying(255) null,
  api_response_fixture jsonb null,
  last_updated_api_football timestamp with time zone null,
  constraint fixtures_pkey primary key (fixture_id)
) TABLESPACE pg_default;

create index IF not exists idx_fixtures_league_id on public.fixtures using btree (league_id) TABLESPACE pg_default;

create index IF not exists idx_fixtures_status_short on public.fixtures using btree (status_short) TABLESPACE pg_default;

create index IF not exists idx_fixtures_home_team_id on public.fixtures using btree (home_team_id) TABLESPACE pg_default;

create index IF not exists idx_fixtures_away_team_id on public.fixtures using btree (away_team_id) TABLESPACE pg_default;

create index IF not exists fixtures_status_utc_kickoff_idx on public.fixtures using btree (status_short, event_date) TABLESPACE pg_default;

create index IF not exists idx_fixtures_event_date on public.fixtures using btree (event_date) TABLESPACE pg_default;

create table public.odds (
  fixture_id bigint generated by default as identity not null,
  bet_id bigint not null,
  bookmaker_id bigint not null,
  label character varying null,
  odd numeric null,
  updated_at timestamp without time zone null,
  constraint odds_pkey primary key (fixture_id, bet_id, bookmaker_id),
  constraint odds_fixture_id_fkey foreign KEY (fixture_id) references fixtures (fixture_id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists odds_fixture_id_idx on public.odds using btree (fixture_id) TABLESPACE pg_default;

create table public.players (
  player_id integer not null,
  name text null,
  firstname text null,
  lastname text null,
  age integer null,
  nationality text null,
  photo_url text null,
  current_team_id integer null,
  last_updated_api_football timestamp with time zone null default now(),
  meta_data jsonb null,
  position character varying(255) null,
  number integer null,
  constraint players_pkey primary key (player_id),
  constraint players_current_team_id_fkey foreign KEY (current_team_id) references teams (team_id) on delete set null
) TABLESPACE pg_default;

create index IF not exists idx_players_current_team_id on public.players using btree (current_team_id) TABLESPACE pg_default;


create table public.predictions (
  fixture_id bigint generated by default as identity not null,
  winner_team_id bigint null,
  home_win numeric null,
  draw numeric null,
  away_win numeric null,
  advice text null,
  updated_at timestamp with time zone not null,
  constraint predictions_pkey primary key (fixture_id),
  constraint predictions_fixture_id_fkey foreign KEY (fixture_id) references fixtures (fixture_id) on delete CASCADE
) TABLESPACE pg_default;

create table public.processed_documents (
  id uuid not null default gen_random_uuid (),
  original_document_hash text null,
  source text not null,
  document_url text null,
  document_title text null,
  document_timestamp timestamp with time zone null,
  overall_match_id integer null,
  reliability_score double precision null,
  processed_at timestamp with time zone null default now(),
  constraint processed_documents_pkey primary key (id),
  constraint processed_documents_overall_match_id_fkey foreign KEY (overall_match_id) references fixtures (fixture_id)
) TABLESPACE pg_default;

create table public.raw_events (
  id uuid not null default gen_random_uuid (),
  match_id bigint null,
  source text not null,
  content_hash text null,
  content_path text null,
  metadata jsonb null,
  reliability_score double precision null,
  created_at timestamp with time zone null default now(),
  constraint raw_events_pkey primary key (id),
  constraint raw_events_match_id_fkey foreign KEY (match_id) references fixtures (fixture_id) on delete CASCADE
) TABLESPACE pg_default;

create table public.teams (
  team_id integer not null,
  name text not null,
  code text null,
  country text null,
  founded integer null,
  national boolean null default false,
  logo_url text null,
  venue_name text null,
  venue_address text null,
  venue_city text null,
  venue_capacity integer null,
  last_updated_api_football timestamp with time zone null default now(),
  meta_data jsonb null,
  venue_id integer null,
  venue_surface character varying(255) null,
  venue_image_url text null,
  api_football_league_id integer null,
  api_football_season integer null,
  constraint teams_pkey primary key (team_id)
) TABLESPACE pg_default;

create table public.value_bets (
  id uuid not null default gen_random_uuid (),
  fixture_id bigint null,
  bet_id bigint null,
  bookmaker_id bigint null,
  odd numeric null,
  probability numeric null,
  value_index numeric null,
  deep_link text null,
  created_at timestamp with time zone not null default now(),
  constraint value_bets_pkey primary key (id),
  constraint value_bets_fixture_id_fkey foreign KEY (fixture_id) references fixtures (fixture_id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists value_bets_fixture_id_idx on public.value_bets using btree (fixture_id) TABLESPACE pg_default;