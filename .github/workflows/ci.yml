name: Backend CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'backend/**'

jobs:
  lint-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt
      - name: Install dependencies
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install flake8 black isort
          pip install -r requirements.txt
      - name: Run linters
        run: |
          cd backend
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          black --check .
          isort --check-only --profile black .

  test-backend:
    runs-on: ubuntu-latest
    needs: lint-backend
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt
      - name: Install dependencies
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          pip install -r requirements.txt
      - name: Run tests
        run: |
          cd backend
          python -m pytest -v tests/
      - name: Check FastAPI app starts
        run: |
          cd backend
          python -c "from app.main import app; print('FastAPI app loaded successfully')"

  docker-build:
    runs-on: ubuntu-latest
    needs: [lint-backend, test-backend]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: false
          tags: mrbets/backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Check docker-compose
        run: |
          docker-compose config
          echo "âœ… docker-compose configuration is valid" 